@startuml Диаграмма классов
 
class FacadeDB{
  --
  + add(Object object) => Object
  + delete(Object object) => Object
  + save(Object object) => Object
}
 
interface IUserDB {
  + get_users(  ) => List<Item>

}
 
interface IItemDB {
  
  + get_items() => List<Item>
}
 
interface IOrderDB {

  + get_orders() => List<Item>

}
 
FacadeDB ..|> IUserDB
FacadeDB ..|> IItemDB
FacadeDB ..|> IOrderDB
 
IUserDB <--o User

IUserDB <--o Item
IItemDB <--o Item
IOrderDB <--o Order
 



class User {
  * id: TEXT
  --
  + status: UserStatus
  + login: TEXT
  + password: TEXT
  + INN: INT
  + legal_entity: TEXT
  + adress: TEXT
  + registred_in: DATETIME
}

enum UserStatus {
  Администратор
  Поставщик
}
 
User *- UserStatus

class Item {
  * id: TEXT
  --
  + seller_id: INT
  + name: TEXT
  + article: INT
  + price: NUMERIC
  + count: DATETIME
}
 
class Order {
  * id: TEXT
  --
  + seller_id: TEXT
  + admin_id: TEXT
  + created_in: DATETIME
  + status: OrderStatus
  + total_price: NUMERIC
  
}
 
enum OrderStatus {
  Не отправленна
  Одобренна
  Доставленна
  Отмененна
}
 
Order *- OrderStatus 
package "Item Windows" {
SellerWindowItemList o--> IItemDB
AdminWindowItemList o--> IItemDB
}
package "Order Windows" {
AdminWindowOrder o--> IOrderDB
SellerWindowOrder o--> IOrderDB
}

package "Login Windows" {
AdminWindowLogin o--> IUserDB
SellerWindowLogin o--> IUserDB
}



package "OrderList Windows" {
AdminWindowOrderList o--> IOrderDB
SellerWindowOrderList o--> IOrderDB
}


 
@enduml
 